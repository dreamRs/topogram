% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny.R
\name{topogram_proxy_iteration}
\alias{topogram_proxy_iteration}
\title{Update number of iteration with proxy}
\usage{
topogram_proxy_iteration(proxy, n_iteration)
}
\arguments{
\item{proxy}{A \code{topogram_proxy} \code{htmlwidget} object.}

\item{n_iteration}{Number of iterations to run the algorithm for. Higher numbers distorts the areas closer to their associated value,
at the cost of performance.}
}
\value{
A \code{topogram_proxy} \code{htmlwidget} object.
}
\description{
Use this in 'shiny' application to update an already generated \code{\link[=topogram]{topogram()}}.
}
\examples{
library(topogram)
library(shiny)

ui <- fluidPage(
  tags$h2("Update number of iteration with proxy"),
  sliderInput(
    inputId = "n_iteration", 
    label = "Number of iteration (more takes longer)",
    min = 1, 
    max = 60,
    value = 10
  ),
  topogramOutput(outputId = "ID", height = "800px")
)

server <- function(input, output, session) {
  
  # Initialize the topogram (non reactive)
  output$ID <- renderTopogram({
    topogram(
      sfobj = world,
      value = "pop_est", 
      label = "{name} : {value}"
    )
  })
  
  # Update with proxy
  observeEvent(input$n_iteration, {
    topogram_proxy_iteration("ID", input$n_iteration)
  }, ignoreInit = TRUE)
  
}

if (interactive())
  shinyApp(ui, server)
}
